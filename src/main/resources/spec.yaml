openapi: 3.1.0
info:
  title: Pet project kotlin API
  version: 2.0.0
externalDocs:
  url: http://localhost:8080
servers:
  - description: Base url
    url: /v1/api
security:
  - BearerAuth: [ ]
paths:
  /users:
    get:
      summary: Get user information
      description: This endpoint requires a valid bearer token
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
      tags:
        - user
  /users/{id}:
    put:
      description: Updates the information from a user.
      parameters:
        - description: A valid user id
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 1
          style: simple
        - description: "The user information to be updated. All fields must be present, but them can be blank if no update is needed"
          explode: true
          in: query
          name: user
          required: true
          schema:
            $ref: '#/components/schemas/User'
            example: { name: John, lastName: Doe, email: john@doe.com, password: password }
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      properties:
        email:
          description: a valid email for the user
          examples:
            - jhon@doe.com
          type: string
        name:
          description: a valid name for the user
          example:
            - John
          type: string
        lastName:
          description: a valid last name for the user
          example:
            - Doe
          type: string
        password:
          description: a valid password for the user
          example:
            - password
          type: string
      required:
        - email
        - lastName
        - name
        - password
    UserResponse:
      example:
        lastName: Doe
        name: Jhon
        id: 1
        email: jhon@doe.com
        token: fkljasdhf9fjkfh23fhkhiafo9
      properties:
        id:
          description: "Auto generated by the api, not required for any transaction"
          example: 1
          type: integer
        email:
          example: jhon@doe.com
          type: string
        name:
          example: Jhon
          type: string
        lastName:
          example: Doe
          type: string
        token:
          description: Auto generated by the api once you create a user or login with
            valid credentials
          example: fkljasdhf9fjkfh23fhkhiafo9
          type: string